# Crypto Analysis: Frequency Analysis
#
# To analyze encrypted messages, to find out information about the possible 
# algorithm or even language of the clear text message, one could perform 
# frequency analysis. This process could be described as simply counting 
# the number of times a certain symbol occurs in the given text. 
# For example:
# For the text "test" the frequency of 'e' is 1, 's' is 1 and 't' is 2.
#
# The input to the function will be an encrypted body of text that only contains 
# the lowercase letters a-z. 
# As output you should return a list of the normalized frequency 
# for each of the letters a-z. 
# The normalized frequency is simply the number of occurrences, i, 
# divided by the total number of characters in the message, n.

def freq_analysis(message):
    alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m', 
                'n','o','p','q','r','s','t','u','v','w','x','y','z']
    count = []  #this creates an empty list of alphabet counts that start at "0"
    i = 0
    while i < 26:   #this makes sure that the empty list will hold exactly 26 elements so that we can count later
        count.append(0)
        i += 1
    message_array = [] #this transforms the message into an array
    for n in message:
        message_array.append(n)
    size = len(message) + 0.0 . #this will be used to get the normalized frequency later
    for a in message_array: #take a letter from message array
        i = 0
        while i < 26: #this makes sure that we are pulling indices that are in the alphabet array 
            if a == alphabet[i]:  #loop through the whole alphabet to find a match
                count[i] += 1  #add the count to the count array of zeroes
            i += 1 #loop through the next letter in the alphabet to find a match
    final_list = []  #empty array to hold normalized values and transfer them from count
    for b in count:
        final_list.append(b/size)
    return final_list
    
#Tests

print freq_analysis("abcd")
#>>> [0.25, 0.25, 0.25, 0.25, 0.0, ..., 0.0]

print freq_analysis("adca")
#>>> [0.5, 0.0, 0.25, 0.25, 0.0, ..., 0.0]

print freq_analysis('bewarethebunnies')
#>>> [0.0625, 0.125, 0.0, 0.0, ..., 0.0]
